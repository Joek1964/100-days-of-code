   #include <iostream>
using namespace std;

class Solution {
public:

    void merge(int arr[], int l, int m, int r)
    {
         // Your code here
         int n1 = m-l+1;
         int n2 = r-m;
         
         int left[n1];
         int right[n2];
         
        //  mow fill these arrays with elements 
        for(int i =0;i<n1;i++){
            left[i] = arr[i+l];
        }
        for(int i =0;i<n2;i++){
            right[i] = arr[i+m+1];
        }
        //  now we have to sort these array using ordinary merge function
        int i =0,j=0,k=l;
        while(i<n1 && j<n2){
            if(left[i]<right[j]){
                arr[k] =left[i];
                i++;
                k++;
            }
            else{
                arr[k] = right[j];
                j++;
                k++;
            }
        
        }
        while(i<n1){
            arr[k] = left[i];
            i++;
            k++;
        }
        while(j<n2){
            arr[k]=right[j];
            j++;
            k++;
        }
    }
    public:
    void mergeSort(int arr[], int l, int r)
    {

        if(l<r){
            int m = (l+r)/2;
            mergeSort(arr,l,m);
            mergeSort(arr,m+1,r);
            merge(arr,l,m,r);
        }
    }
};
