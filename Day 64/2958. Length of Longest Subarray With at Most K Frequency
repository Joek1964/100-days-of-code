https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/?envType=daily-question&envId=2024-03-28

class Solution {
public:
    long long maxSubarrayLength(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int>mp;
        int j=0,i=0;
        int ans = -1;
        while(j<n){
            mp[nums[j]]++;
                while(i<=j && mp[nums[j]]>k){
                    // ye while loop dissatisfy wali condition hai to yahan ans 
                    // calculate nahi karna ,iske bahar karna hai
                    mp[nums[i]]--;
                    i++;
                }
            ans = max(ans,j-i+1);
            j++;
        }
        return ans;
    }
};

// class Solution {
// public:
//     int maxSubarrayLength(vector<int>& nums, int k) {
//         int n = nums.size();
//         int i =0,j=0;
//         unordered_map<int,int>mp;
//         int ans=-1;
//         while(j<n){
//             mp[nums[j]]++;
//             if(mp[nums[j]]>2){
//                 ans = max(ans,j-i+1);
//                 while(mp[nums[j]]>2){
//                     mp[nums[i]]--;
//                     if(mp[nums[j]]==0){
//                         mp.erase(nums[j]);
//                     }
//                     i++;
//                 }
//             }
//             j++;
//         }
//         return ans;
//     }
// };
