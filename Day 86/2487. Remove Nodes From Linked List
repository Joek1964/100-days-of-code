
class Solution {
public:
ListNode* reverse(ListNode* head){
    ListNode* nextNode = NULL;
    ListNode* prev = NULL;
    ListNode* curr = head;
    while(curr != NULL){
        nextNode = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nextNode;
    }   
    return prev;
}

    ListNode* removeNodes(ListNode* head) {
            if(head==NULL || head->next==NULL){
            return head;
        }
        head = reverse(head);
        ListNode* temp = head;
        while(temp->next)
        {
            if(temp->next->val < temp->val)
            temp->next = temp->next->next;
            else
            temp = temp->next;
        }
        return reverse(head);
    }
    //   if(head==NULL || head->next==NULL){
    //         return head;
    //     }
    //     ListNode* temp = head;
    //     ListNode* ahead = temp->next;
    //     if(temp->val<ahead->val){
    //         head = temp->next;
    //         temp->next = NULL;
    //         delete(temp);
    //         removeNodes(head);
    //     }
    //     else{
    //         while(temp->val > ahead->val && ahead->next!=NULL){
    //             ahead = ahead->next;
    //         }
    //         // loop out means found one which has greater value than temp
    //         head = temp->next;
    //         temp->next =NULL;
    //         delete(temp);
    //         removeNodes(head);
    //     }
};
