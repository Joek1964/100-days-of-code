class Solution {
public:
    vector<pair<int,int>>d = {{0,1},{0,-1},{1,0},{-1,0}};
    // these are our movement arrays fro coordinate system 4 ways
    int maxDistance(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<pair<int,int>>v;
        queue<pair<int,int>>q;
        vector<vector<bool>>visited(n,vector<bool>(n,false));
        for(int i =0;i<n;i++){
            for(int j =0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({i,j});
                }
            }
        }
        if(q.empty() || q.size()==n*n )return -1;
        int ans =0;
        while(!q.empty()){
            int size = q.size();
            while(size--){
                
                int x = q.front().first;
                int y = q.front().second;
                q.pop();
                for(int k =0;k<4;k++){
                    int i = x + d[k].first;
                    int j = y +d[k].second;
                    if(i>=0 && j>=0 && i<n && j<n && visited[i][j]!=1){
                        visited[i][j]= true;
                        q.push({i,j});
                    }
                }
            }
            ans++;
        }
        return ans-1;
    }
};
