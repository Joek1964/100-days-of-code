https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/?envType=daily-question&envId=2024-03-28
class Solution {
public:
    long long maxSubarrayLength(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int>mp;
        int j=0,i=0;
        int ans = -1;
        while(j<n){
            mp[nums[j]]++;

            // if(mp[nums[j]]>k){
                while(i<=j && mp[nums[j]]>k){
                    mp[nums[i]]--;
                    i++;
                }
            // }
            ans = max(ans,j-i+1);
            j++;
        }
        return ans;
    }
};
