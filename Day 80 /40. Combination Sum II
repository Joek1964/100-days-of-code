class Solution {
public:
    void recur(vector<int>& v, vector<vector<int>>& ans, vector<int>& arr, int index, int target, int n) {
        if(target ==0){
            ans.push_back(v);
            return ;
        }
    
    for(int i = index; i < n; i++) {
        if(i>index && arr[i]==arr[i-1])continue;
        if(arr[i]>target)break;
            v.push_back(arr[i]);
            recur(v, ans, arr, i + 1, target - arr[i], n);           
            v.pop_back();
    }
}
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        int n = candidates.size();
        sort(candidates.begin(),candidates.end());
         vector<int> v;
        vector<vector<int>> ans;
        recur(v, ans, candidates, 0, target, candidates.size());
        return ans;
    }
};
