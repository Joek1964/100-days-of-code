void recur(int ind,vector<vector<int>>&ans,vector<int>&arr,int target,vector<int>&ds){
    // void findCombination(int ind, int target, vector < int > & arr, vector < vector < int >> & ans, vector < int > & ds) {
      if (ind == arr.size()) {
        if (target == 0) {
          ans.push_back(ds);
        }
        return;
      }
      // pick up the element 
      if (arr[ind] <= target) {
        ds.push_back(arr[ind]);
        recur(ind,ans, arr,target - arr[ind], ds);
        ds.pop_back();
      }

      recur(ind + 1, ans, arr,target,ds);

    }
vector<vector<int>> combSum(vector<int> &arr, int target)
{
vector<vector<int>> ans;
vector<int>temp;
sort(arr.begin(),arr.end());
recur(0,ans,arr,target,temp);
return ans;
}
